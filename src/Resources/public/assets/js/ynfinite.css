@charset "UTF-8";
/* Definitions */
/**
 * Grid setup
 *
 * The grid will calculate dimensions based on these two variables:
 * $fg-columns will inform the grid loops how many columns there should be.
 * $fg-gutter will inform the grid loops how big eac column's gutters should be.
 *
 * The grid will name columns, rows, offsets based on these three variables:
 * $fg-class-row string used for the row class
 * $fg-class-col string used for the column class
 * $fg-class-off string used for the offset class
 */
/**
 * Break point namespace object
 *
 * Set the default namespace object with these defaults with the
 * understanding that you can pass in whatever you might require for your site.
 *
 * $fg-breakpoints is a Sass list with nested lists inside. Each sub list defines two things.
 * 1. The namespace for that breakpoint. (Required) (i.e. xs, sm, md, lg)
 * 2. The min-width measurement for the breakpoint for that namespace. (i.e. 48em, 62em, 75em)
 *
 * Note: These should be in the proper order (at least till libsass handles map keys properly).
 *
 * Note: If the measurement is left out then it will be skipped when generating
 * the grid and applied to global styles.
 *
 */
/* Media Breakpoints */
.lead-form-container .form,
.lead-form-container .result {
  opacity: 1;
  transition: opacity .3s 0s ease;
  height: auto; }

.lead-form-container .hidden {
  height: 0;
  overflow: hidden;
  opacity: 0; }

.lead-form-container .form .widget {
  margin: 2rem 0;
  border-left: 2px solid white;
  padding-left: 1rem;
  margin-left: -1rem; }
  .lead-form-container .form .widget input, .lead-form-container .form .widget select {
    padding: 0.5rem 1rem;
    border: 1px solid lightgrey; }
  .lead-form-container .form .widget.hasError {
    border-left: 2px solid orange; }
  .lead-form-container .form .widget .checkbox {
    display: flex;
    display: -webkit-flex;
    justify-content: flex-start;
    -webkit-justify-content: flex-start;
    flex-direction: row;
    -webkit-flex-direction: row;
    align-items: center;
    -webkit-align-items: center; }
    .lead-form-container .form .widget .checkbox input {
      margin-right: 1rem; }
  .lead-form-container .form .widget .checkbox-group {
    display: flex;
    display: -webkit-flex;
    justify-content: flex-start;
    -webkit-justify-content: flex-start;
    flex-direction: row;
    -webkit-flex-direction: row; }
    .lead-form-container .form .widget .checkbox-group .checkbox {
      margin-right: 2rem; }
  .lead-form-container .form .widget label {
    display: block; }
  .lead-form-container .form .widget.submit input {
    width: auto;
    padding: 1rem 1rem;
    width: auto;
    border: 1px solid #fdb813;
    border-radius: 0.5rem;
    font-size: 1.6rem;
    transition: all .3s 0s ease;
    text-align: center;
    background-color: #fdb813;
    color: white;
    outline: none; }
    .lead-form-container .form .widget.submit input:hover {
      background-color: #db9b02; }

.lead-form-container .form .error {
  font-size: 1.4rem;
  margin-top: 0.25rem; }
  .lead-form-container .form .error::before {
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: 1.6rem;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    content: "\F071";
    padding-right: 1rem;
    color: orange; }
